apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                version "3.18.1"
            }
            ndk {
                abiFilters 'armeabi-v7a','arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    ndkVersion '22.1.7171670'
}

ext {
    NEXUS_USER = ''
    NEXUS_PASSWORD = ''
    RELEASE_SNAPSHOT = true

    POM_URL_SNAP = 'https://www.raoyunsoft.com/nexus/repository/maven-snapshots/'
    POM_URL = 'https://www.raoyunsoft.com/nexus/repository/maven-releases/'

    POM_GROUP_ID = 'com.guaishou.bzlib'
    POM_ATRIFACT_ID = 'bzffmpegcmd'
    POM_VERSION = '1.0.17'
}
if (System.getenv('NEXUS_USER')) {
    NEXUS_USER = System.getenv('NEXUS_USER')
}
if (System.getenv('NEXUS_PASSWORD')) {
    NEXUS_PASSWORD = System.getenv('NEXUS_PASSWORD')
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = POM_GROUP_ID
                artifactId = POM_ATRIFACT_ID
                artifact androidSourcesJar
                version = RELEASE_SNAPSHOT ? POM_VERSION + "-SNAPSHOT" : POM_VERSION
            }
        }
        repositories {
            maven {
                url RELEASE_SNAPSHOT ? POM_URL_SNAP : POM_URL
                credentials {
                    username NEXUS_USER
                    password NEXUS_PASSWORD
                }
            }
        }
    }
}
tasks.withType(PublishToMavenRepository) { it.dependsOn lint }

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.getSrcDirs()
}
artifacts {
    archives androidSourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
